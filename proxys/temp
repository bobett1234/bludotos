thisis[actT.x].BOT = 'false';
thisis[actT.x].getbot = function(urlc, callback) {
	urlb = 'proxy.php'+'?'+'url='+encodeURIComponent(urlc)+'&mode=native&full_headers=1';
        if(window.XMLHttpRequest){
	var getb = new XMLHttpRequest();
        } else {
        var getb = new ActiveXObject("Microsoft.XMLHTTP")
        };
	getb.open('get', urlb, true);
 	getb.onreadystatechange = function() {
		if (getb.readyState==4) {
                     console.log('BOT');
                     var datad = getb.responseText;
			//window.data=JSON.parse(datad);
                        //if (data.messages && thisis[actT.x].login == 'false') {                        
			//thisis[actT.x].parsed = JSON.parse(datad);
			thisis[actT.x].parsed2 = JSON.parse(datad);
                        thisis[actT.x].BOTtoken = thisis[actT.x].parsed2.token;
                        setTimeout('thisis[actT.x].get("amoeba.im/api/rooms/join?room="+encodeURIComponent(\'#lobby\')+"&token="+encodeURIComponent(thisis[actT.x].BOTtoken))', 1000);
thisis[actT.x].BOT = 'true';
setTimeout('thisis[actT.x].get("amoeba.im/api/postMessage?room="+encodeURIComponent(\'#lobby\')+"&message="+encodeURIComponent(thisis[actT.x].username+\' has joined the chat\')+"&token="+thisis[actT.x].BOTtoken);', 1000);
setTimeout('thisis[actT.x].get("amoeba.im/api/postMessage?room="+encodeURIComponent(\'#lobby\')+"&message="+encodeURIComponent(\'/msg \'+thisis[actT.x].username+thisis[actT.x].BOTtoken)+"&token="+thisis[actT.x].BOTtoken)', 1000);
                        if(callback) {
                             callback(thisis[actT.x].parsed2);
                        };
        }
        }
        getb.send();
};
thisis[actT.x].sendm = function(urlc, callback) {
	urlb = 'proxy.php'+'?'+'url='+encodeURIComponent(urlc)+'&mode=native&full_headers=1';
        if(window.XMLHttpRequest){
	var getb = new XMLHttpRequest();
        } else {
        var getb = new ActiveXObject("Microsoft.XMLHTTP")
        };
	getb.open('get', urlb, true);
 	getb.onreadystatechange = function() {
		if (getb.readyState==4) {
                    // console.log('BOT?');
                     var datad = getb.responseText;
			//window.data=JSON.parse(datad);
                        //if (data.messages && thisis[actT.x].login == 'false') {                        
			thisis[actT.x].parsed = JSON.parse(datad);
			thisis[actT.x].parsed2 = JSON.parse(datad);
                        if (thisis[actT.x].parsed.messages && callback) {
                            //get('amoeba.im/api/Messages?token='+token+'&since='+thisis[actT.x].parsed.time+'&history=false');
                        };
                        if (thisis[actT.x].parsed2.messages) {
			//if (thisis[actT.x].login == 'false') {
			for (var i=0; i < thisis[actT.x].parsed2.messages.length; i++) {
                        if (thisis[actT.x].parsed2.messages[i].to == 'BOT' && thisis[actT.x].parsed2.messages[i].type == 'pm' && thisis[actT.x].parsed2.messages[i].message.split(' ')[0] == 'say') {
                        window.tempmesg = thisis[actT.x].parsed2.messages[i];
                            thisis[actT.x].sendm("amoeba.im/api/postMessage?room="+encodeURIComponent('#lobby')+"&message="+encodeURIComponent(thisis[actT.x].parsed2.messages[i].message.substr(4))+"&token="+thisis[actT.x].BOTtoken);
                        } else if (thisis[actT.x].parsed2.messages[i].to == 'BOT' && thisis[actT.x].parsed2.messages[i].type == 'pm' && thisis[actT.x].parsed2.messages[i].message.split(' ')[0] == 'calc') {
                          thisis[actT.x].sendm("amoeba.im/api/postMessage?room="+encodeURIComponent('#lobby')+"&message="+encodeURIComponent(thisis[actT.x].parsed2.messages[i].message.substr(5)+'='+calculate(thisis[actT.x].parsed2.messages[i].message.substr(5)))+"&token="+thisis[actT.x].BOTtoken);
                        };
                        };
                        };
        }
        }
        getb.send();
};
thisis[actT.x].get = function(urlc, callback) {
	urla = 'proxy.php'+'?'+'url='+encodeURIComponent(urlc)+'&mode=native&full_headers=1';
        if(window.XMLHttpRequest){
	var getx = new XMLHttpRequest();
        window.getx = getx;
        } else {
        var getx = new ActiveXObject("Microsoft.XMLHTTP");
        window.getx = getx;
        };
	getx.open('get', urla, true);
 	getx.onreadystatechange = function() {
		if (getx.readyState==4) {
                        console.log('sent');
			var datad = getx.responseText;
			//window.data=JSON.parse(datad);
                        //if (data.messages && thisis[actT.x].login == 'false') {                        
			thisis[actT.x].parsed = JSON.parse(datad);
			if (!thisis[actT.x].token) {
				thisis[actT.x].token = thisis[actT.x].parsed.token;
			} ;
                        if (thisis[actT.x].login == 'true') {
			thisis[actT.x].parsedu = JSON.parse(datad);
                        thisis[actT.x].userdiv = document.getElementById('users');
                        for (var i=0; i < thisis[actT.x].parsedu.users.length; i++) {
                             userdiv.innerHTML+='<font class="users">'+parsedu.users[i].username+'</font>';
                             if (thisis[actT.x].parsed.users[i].username == 'BOT') {
                                 thisis[actT.x].BOT = 'true';
                             };
                        };
                        if (thisis[actT.x].BOT.login) {
                            //thisis[actT.x].BOTtoken = thisis[actT.x].parsed.token;
                        };
                        if (thisis[actT.x].BOT == 'false') {
                        thisis[actT.x].temptoken = thisis[actT.x].token;
                        thisis[actT.x].getbot("amoeba.im/api/login?username=BOT");
                        thisis[actT.x].BOT = 'true';
                        };
                        };
			if (thisis[actT.x].parsed.username && thisis[actT.x].parsed.username != 'BOT') {
				thisis[actT.x].username = thisis[actT.x].parsed.username;
			};
			//if (!thisis[actT.x].time) {
				thisis[actT.x].time = thisis[actT.x].parsed.time;
			//};
			if (thisis[actT.x].login == 'false' && thisis[actT.x].parsed.messages) {
			//if (thisis[actT.x].login == 'false') {
			for (var i=0; i < thisis[actT.x].parsed.messages.length; i++) {
                        if (thisis[actT.x].parsed.messages[i].to == 'BOT' && thisis[actT.x].parsed.messages[i].type == 'pm' && thisis[actT.x].parsed.messages[i].message.split(' ')[0] == 'say') {
                            thisis[actT.x].sendm("amoeba.im/api/postMessage?room="+encodeURIComponent('#lobby')+"&message="+encodeURIComponent(thisis[actT.x].parsed.messages[i].message.substr(4))+"&token="+thisis[actT.x].BOTtoken);
                        };
                        if (thisis[actT.x].parsed.messages[i].from == 'system') {
                            if(thisis[actT.x].parsed.messages[i].message.split(" ")[1] == 'disconnected.') {
                                  for (var b=0; b < thisis[actT.x].userdiv.children.length; b++) {
                                       if (thisis[actT.x].userdiv.children[b].innerHTML == thisis[actT.x].parsed.messages[i].message.split(" ")[0]) {
                                            thisis[actT.x].sendm("amoeba.im/api/postMessage?room="+encodeURIComponent('#lobby')+"&message="+encodeURIComponent(thisis[actT.x].parsed.messages[i].message.split(' ')[0]+' has left the chat room')+"&token="+thisis[actT.x].BOTtoken);
                                            thisis[actT.x].userdiv.removeChild(thisis[actT.x].userdiv.children[b]);
                                       }
                                   }
                            } else if(thisis[actT.x].parsed.messages[i].message.split(" ")[1] == 'joined' && thisis[actT.x].parsed.messages[i].message.split(" ")[0] != thisis[actT.x].username) {
                                     if (thisis[actT.x].parsed.messages[i].message.split(' ')[0] != 'jason') {
                                     thisis[actT.x].sendm("amoeba.im/api/postMessage?room="+encodeURIComponent('#lobby')+"&message="+encodeURIComponent(thisis[actT.x].parsed.messages[i].message.split(' ')[0]+' has joined the chat room')+"&token="+thisis[actT.x].BOTtoken);
                                     } else {
                                     thisis[actT.x].sendm("amoeba.im/api/postMessage?room="+encodeURIComponent('#lobby')+"&message="+encodeURIComponent('the jason-king has joined the chat room')+"&token="+thisis[actT.x].BOTtoken);
                                     };
                                     thisis[actT.x].userdiv.innerHTML+='<font class="users">'+thisis[actT.x].parsed.messages[i].message.split(" ")[0]+'</font>';
                            }
                        }
			if (thisis[actT.x].parsed.messages[i].message.substr(0, 7) == 'http://') {
				window.thisis[actT.x].divm = document.createElement('tr');
				thisis[actT.x].divm.style.cssText = 'border-top:1px solid black;position:relative;width:100%;height:auto;top:0px;left:0px;font-size:10;';
				thisis[actT.x].divm.innerHTML='<td style="border-right:1px solid black;text-align:right;width:12em;"><font style="text-align:right;">'+parsed.messages[i].from+'</font></td>';
                                var a = document.createElement('a');
                                a.href = thisis[actT.x].parsed.messages[i].message;
                                a.target = '_blank';
                                a.innerText = thisis[actT.x].parsed.messages[i].message;
                                thisis[actT.x].divm.appendChild(a);
				thisis[actT.x].paste.children[0].appendChild(thisis[actT.x].divm);
				//thisis[actT.x].time=thisis[actT.x].parsed.time;
				//thisis[actT.x].paste.scrollTop = thisis[actT.x].paste.children[0].scrollHeight;
                                if (thisis[actT.x].parsed.messages[i].message.substr((thisis[actT.x].parsed.messages[i].message.length-3), thisis[actT.x].parsed.messages[i].message.length) == 'png' || thisis[actT.x].parsed.messages[i].message.substr((thisis[actT.x].parsed.messages[i].message.length-3), thisis[actT.x].parsed.messages[i].message.length) == 'jpg' || thisis[actT.x].parsed.messages[i].message.substr((thisis[actT.x].parsed.messages[i].message.length-3), thisis[actT.x].parsed.messages[i].message.length) == 'gif' || thisis[actT.x].parsed.messages[i].message.substr((thisis[actT.x].parsed.messages[i].message.length-3), thisis[actT.x].parsed.messages[i].message.length) == 'jepg' || thisis[actT.x].parsed.messages[i].message.substr((thisis[actT.x].parsed.messages[i].message.length-3), thisis[actT.x].parsed.messages[i].message.length) == 'svg') {
			//window.thisis[actT.x].divm = document.createElement('tr');
			//thisis[actT.x].divm.style.cssText = 'border-top:1px solid black;position:relative;width:100%;height:auto;top:0px;left:0px;font-size:10;';
                        var img = document.createElement('img');
                        img.src = thisis[actT.x].parsed.messages[i].message;
                        img.style.cssText = 'width:100px;height=100px;';
			thisis[actT.x].divm.appendChild(img);
			//thisis[actT.x].paste.children[0].appendChild(thisis[actT.x].divm);
			thisis[actT.x].time=thisis[actT.x].parsed.time;
			thisis[actT.x].paste.scrollTop = thisis[actT.x].paste.children[0].scrollHeight;
			} else if (thisis[actT.x].parsed.messages[i].message.substr(0, 14) == 'http://youtube' || thisis[actT.x].parsed.messages[i].message.substr(0, 18) == 'http://www.youtube') {
			//window.thisis[actT.x].divm = document.createElement('tr');
			//thisis[actT.x].divm.style.cssText = 'border-top:1px solid black;position:relative;width:100%;height:auto;top:0px;left:0px;font-size:10;';
                        var iframe = document.createElement('iframe');
                        iframe.src = 'http://youtube.com/embed/'+parsed.messages[i].message.substr(31, thisis[actT.x].parsed.messages[i].message.length);
			thisis[actT.x].divm.appendChild(iframe);
			//thisis[actT.x].paste.children[0].appendChild(thisis[actT.x].divm);
			thisis[actT.x].time=thisis[actT.x].parsed.time;
			thisis[actT.x].paste.scrollTop = thisis[actT.x].paste.children[0].scrollHeight;
                        };
			} else {
				window.thisis[actT.x].divm = document.createElement('tr');
				thisis[actT.x].divm.style.cssText = 'border-top:1px solid black;position:relative;width:100%;height:auto;top:0px;left:0px;font-size:10;';
				thisis[actT.x].divm.innerHTML='<td style="border-right:1px solid black;text-align:right;width:12em;">'+parsed.messages[i].from+' </td>';
                                thisis[actT.x].divm.appendChild(document.createTextNode(thisis[actT.x].parsed.messages[i].message));
				thisis[actT.x].paste.children[0].appendChild(thisis[actT.x].divm);
				thisis[actT.x].time=thisis[actT.x].parsed.time;
				thisis[actT.x].paste.scrollTop = thisis[actT.x].paste.children[0].scrollHeight;
                        };
			};
                        //delete thisis[actT.x].parsed.messages;
                        window.finish = 'true';
			};
                        window.messaging = 'false';
//if (thisis[actT.x].token) {
				if (thisis[actT.x].history == 'true') {
					//get('amoeba.im/api/Messages?token='+token+'&since='+new Date().getTime()+'&history=true');
					thisis[actT.x].history = 'false';
					thisis[actT.x].login = 'false';
					window.messaging = 'false';
                                        thisis[actT.x].startMessagePolling();
				}
                                if (thisis[actT.x].history == 'false' && window.finish == 'true') {
                                       // console.log('api/messages', thisis[actT.x].parsed.success, thisis[actT.x].parsed.messages);
                                        window.this_time = new Date().getTime();
                                        //window.tempurl = 
                                        //window.this_time = thisis[actT.x].parsed.time;
					//setTimeout("get('amoeba.im/api/Messages?token='+token+'&since='+thisis[actT.x].parsed.time+'&history=false');", 5);
					//setTimeout("window.finish = 'false';get('amoeba.im/api/messages?token='+encodeURIComponent(thisis[actT.x].token)+'&since='+window.this_time);", 5);
					//get('amoeba.im/api/Messages?token='+token+'&since='+thisis[actT.x].parsed.time);
					thisis[actT.x].login = 'false';
					window.messaging = 'false';
                                        //window.finish = 'false';
				};
			//};
                        if(callback) {
                               callback(this);
                        };
		};
	};
	getx.send();
                window.pollingit = 'false';
};
window.messageNotification = function(message) {
                    if (message.from == 'system') {
                            if(message.message.split(" ")[1] == 'disconnected.') {
                                  for (var b=0; b < thisis[actT.x].userdiv.children.length; b++) {
                                       if (thisis[actT.x].userdiv.children[b].innerHTML == message.message.split(" ")[0]) {
                                            thisis[actT.x].userdiv.removeChild(thisis[actT.x].userdiv.children[b]);
                                            sendm("amoeba.im/api/postMessage?room="+encodeURIComponent('#lobby')+"&message="+encodeURIComponent(message.message.split(' ')[0]+' has left the chat room')+"&token="+thisis[actT.x].BOTtoken);
                                       }
                                   }
                            } else if(message.message.split(" ")[1] == 'joined' && message.message.split(" ")[0] != thisis[actT.x].username) {
                                     thisis[actT.x].userdiv.innerHTML+='<font class="users">'+message.message.split(" ")[0]+'</font>';
                            }
                        }
			if (message.message.substr(0, 7) == 'http://') {
				window.thisis[actT.x].divm = document.createElement('tr');
				thisis[actT.x].divm.style.cssText = 'border-top:1px solid black;position:relative;width:100%;height:auto;top:0px;left:0px;font-size:10;';
				thisis[actT.x].divm.innerHTML='<td style="border-right:1px solid black;text-align:right;width:12em;"><font style="text-align:right;">'+message.from+'</font></td>';
                                var a = document.createElement('a');
                                a.href = message.message;
                                a.target = '_blank';
                                a.innerText = message.message;
                                thisis[actT.x].divm.appendChild(a);
				thisis[actT.x].paste.children[0].appendChild(thisis[actT.x].divm);
				//thisis[actT.x].time=thisis[actT.x].parsed.time;
				//thisis[actT.x].paste.scrollTop = thisis[actT.x].paste.children[0].scrollHeight;
                                if (message.message.substr((message.message.length-3), message.message.length) == 'png' || message.message.substr((message.message.length-3), message.message.length) == 'jpg' || message.message.substr((message.message.length-3), message.message.length) == 'gif' || message.message.substr((message.message.length-3), message.message.length) == 'jepg' || message.message.substr((message.message.length-3), message.message.length) == 'svg') {
			//window.thisis[actT.x].divm = document.createElement('tr');
			//thisis[actT.x].divm.style.cssText = 'border-top:1px solid black;position:relative;width:100%;height:auto;top:0px;left:0px;font-size:10;';
                        var img = document.createElement('img');
                        img.src = message.message;
                        img.style.cssText = 'width:100px;height=100px;';
			thisis[actT.x].divm.appendChild(img);
			//thisis[actT.x].paste.children[0].appendChild(thisis[actT.x].divm);
			thisis[actT.x].time=thisis[actT.x].parsed.time;
			thisis[actT.x].paste.scrollTop = thisis[actT.x].paste.children[0].scrollHeight;
			} else if (message.message.substr(0, 14) == 'http://youtube' || message.message.substr(0, 18) == 'http://www.youtube') {
			//window.thisis[actT.x].divm = document.createElement('tr');
			//thisis[actT.x].divm.style.cssText = 'border-top:1px solid black;position:relative;width:100%;height:auto;top:0px;left:0px;font-size:10;';
                        var iframe = document.createElement('iframe');
                        iframe.src = 'http://youtube.com/embed/'+message.message.substr(31, message.message.length);
			thisis[actT.x].divm.appendChild(iframe);
			//thisis[actT.x].paste.children[0].appendChild(thisis[actT.x].divm);
			thisis[actT.x].time=thisis[actT.x].parsed.time;
			thisis[actT.x].paste.scrollTop = thisis[actT.x].paste.children[0].scrollHeight;
                        };
			} else {
				window.thisis[actT.x].divm = document.createElement('tr');
				thisis[actT.x].divm.style.cssText = 'border-top:1px solid black;position:relative;width:100%;height:auto;top:0px;left:0px;font-size:10;';
				thisis[actT.x].divm.innerHTML='<td style="border-right:1px solid black;text-align:right;width:12em;">'+message.from+' </td>';
                                thisis[actT.x].divm.appendChild(document.createTextNode(message.message));
				thisis[actT.x].paste.children[0].appendChild(thisis[actT.x].divm);
				thisis[actT.x].time=thisis[actT.x].parsed.time;
				thisis[actT.x].paste.scrollTop = thisis[actT.x].paste.children[0].scrollHeight;
                        };
};
thisis[actT.x].pollMessages = function(options) {
                console.log('test');
		var ignoreResponse = false,
			url = 'amoeba.im/api/messages?token='+encodeURIComponent(thisis[actT.x].token);
		options = options || {};
		if (window.enableMessagePolling===false) {
			window.isMessagePolling = false;
			return true;
		}
		window.isMessagePolling = true;
		window.messagePollingTimer = setTimeout(function() {
			ignoreResponse = true;
			clearTimeout(window.messagePollingTimer);
			thisis[actT.x].pollMessages();
		}, 30*1000);
		if (options.history===true) {
			url += '&history=true'
		}
		else {
			url += '&since='+(window.pollerSince || '');
		}
                window.pollingit = 'true';
		thisis[actT.x].get(url, function(response) {
                //window.finish = 'false';
			var success = response && response.success===true,
				messages = success && response.messages,
				i, notifyMessageFound=false;
			if (ignoreResponse===true || window.enableMessagePolling===false) {
				return false;
			}
			clearTimeout(window.messagePollingTimer);
			//console.log('api/messages', success, messages);
			if (messages && messages.length>0) {
				for (i=0; i<messages.length; i++) {
					if (!notifyMessageFound && messages[i].from!==thisis[actT.x].username && messages[i].type==='chat') {
						window.messageNotification(messages[i]);
						notifyMessageFound = true;
					}
					if (!window.pollerSince || messages[i].id>window.pollerSince) {
						window.pollerSince = messages[i].id;
					}
					//priv.addMessage(messages[i]);
				}
			}
			window.lastMessagesPoll = response.time || new Date().getTime();
			if (window.enableMessagePolling===false && response.reconnect!==false) {
				window.isMessagePolling = false;
			}
			else {
				window.messagePollingTimer = setTimeout(pollMessages, 1);
			}
		});
			url = 'amoeba.im/api/messages?token='+encodeURIComponent(thisis[actT.x].BOTtoken);
                if (options.history===true) {
			url += '&history=true'
		}
		else {
			url += '&since='+(window.pollerSince || '');
		}
                thisis[actT.x].sendm(url, function(response) {
                //window.finish = 'false';
			var success = response && response.success===true,
				messages = success && response.messages,
				i, notifyMessageFound=false;
			if (ignoreResponse===true || window.enableMessagePolling===false) {
				return false;
			}
			clearTimeout(window.messagePollingTimer);
			//console.log('api/messages', success, messages);
			if (messages && messages.length>0) {
				for (i=0; i<messages.length; i++) {
					if (!notifyMessageFound && messages[i].from!==thisis[actT.x].username && messages[i].type==='chat') {
						window.messageNotification(messages[i]);
						notifyMessageFound = true;
					}
					if (!window.pollerSince || messages[i].id>window.pollerSince) {
						window.pollerSince = messages[i].id;
					}
					//priv.addMessage(messages[i]);
				}
			}
			window.lastMessagesPoll = response.time || new Date().getTime();
			if (window.enableMessagePolling===false && response.reconnect!==false) {
				window.isMessagePolling = false;
			}
			else {
				window.messagePollingTimer = setTimeout(pollMessages, 1);
			}
		});
	};
thisis[actT.x].startMessagePolling = function() {
		var options;
		if (window.enableMessagePolling===true) {
			return true;
		}
		window.enableMessagePolling = true;
		if (window.isMessagePolling!==true) {
			clearTimeout(window.messagePollingTimer);
			if (window.hasPolledEver!==true) {
				window.hasPolledEver = true;
				options = { history:false };
			}
			thisis[actT.x].pollMessages(options);
		}
	};
	var stopMessagePolling = function() {
		window.enableMessagePolling = false;
		if (window.messagePollingTimer) {
			clearTimeout(window.messagePollingTimer);
                        window.isMessagePolling = false;
		}
	};
var cookie = {
set : function (key, value, days, domain, path, secure) {
			var expires = '',
				cookie = '',
				date;
			path = typeof(path)==='string' ? path : '';
			if (days) {
				date = new Date();
				date.setTime(date.getTime() + days*24*60*60*1000);
				expires = "; expires="+date.toGMTString();
			}
			cookie = key + "=" + encodeURIComponent(value) + expires + "; path=/"+path.replace(/^\//,'');
			if (typeof(domain)==='string' && domain.length>0) {
				cookie += '; domain=' + domain.replace(/[\;\,]/,'');
			}
			if (secure===true) {
				cookie += '; secure';
			}
			document.cookie = cookie;
		},
		get : function (key) {
			var c, i, ca = document.cookie.split(';');
			for (i=0; i<ca.length; i++) {
				c = ca[i].replace(/^\s+/gim,'');
				if (c.indexOf(key+"=")===0) {
					return decodeURIComponent(c.substring(key.length+1,c.length));
				}
			}
			return null;
		},
		remove	: function (key) {
			this.set(key, "", -1);
		}
};
thisis[actT.x].processit = function() {

                if (thisis[actT.x].input.value == '/quit') {
			thisis[actT.x].login = 'true';
			thisis[actT.x].get("amoeba.im/api/logout?token="+encodeURIComponent(thisis[actT.x].token));
                        thisis[actT.x].sendm("amoeba.im/api/postMessage?room="+encodeURIComponent('#lobby')+"&message="+encodeURIComponent(thisis[actT.x].username+' has left the chat room')+"&token="+thisis[actT.x].BOTtoken);
			//thisis[actT.x].login = 'false';
			//delete thisis[actT.x].token;
		};
		if (!thisis[actT.x].login)  {
			thisis[actT.x].login = 'true';
                        window.isMessagePolling = false
			thisis[actT.x].get("amoeba.im/api/login?username="+thisis[actT.x].input.value);
			thisis[actT.x].input.value = '';
			setTimeout('thisis[actT.x].get("amoeba.im/api/rooms/join?room="+encodeURIComponent(\'#lobby\')+"&token="+encodeURIComponent(thisis[actT.x].token))', 1000);
			thisis[actT.x].history = 'true';
			window.loggedin = 'true';
                        //startMessagePolling();
                        cookie.set("authusername", thisis[actT.x].parsed.username);
		} else if (window.loggedin=='true')  {
			window.messaging = 'true';
                        //window.getx.abort();
			thisis[actT.x].sendm("amoeba.im/api/postMessage?room="+encodeURIComponent('#lobby')+"&message="+encodeURIComponent(thisis[actT.x].input.value)+"&token="+thisis[actT.x].token);
			thisis[actT.x].input.value = '';
		};
};
window.addEventListener('keypress', function(event) {
if (event.target==thisis[actT.x].input) {
	if (event.keyCode==13) {
            thisis[actT.x].processit();
	};
};
}, true);